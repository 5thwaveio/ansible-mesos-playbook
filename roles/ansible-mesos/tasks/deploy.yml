---
- name: Install Mesos python bindings
  shell: easy_install {{mesos_python_dest_file}}

# - stat: path=/etc/init/mesos-master.conf
#   register: mesos_master_exists
#   notify:
#     - Disable mesos-master

# - stat: path=/etc/init/mesos-slave.conf
#   register: mesos_slave_exists
#   notify:
#     - Disable mesos-slave

# == Disable services
# - name: Disable mesos-master
#   service: name=mesos-master state=stopped enabled=no sleep=10
#   when: mesos_master_exists.stat.exists == True

# - name: Disable mesos-slave
#   service: name=mesos-slave state=stopped enabled=no sleep=10
#   when: mesos_slave_exists.stat.exists == True

# - name: Pause to allow services to catch up
#   pause: seconds=10

# == Delete to force template creation
- name: Delete master script
  file: path=/etc/init/mesos-master.conf state=absent
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"

- name: Delete slave script
  file: path=/etc/init/mesos-slave.conf state=absent
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"

# == Re-enable services as necessary
- name: Mesos master script
  template: src=mesos-master.j2 dest=/etc/init/mesos-master.conf
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-master

- name: Mesos slave script
  template: src=mesos-slave.j2 dest=/etc/init/mesos-slave.conf
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-slave

- name: Copy the configuration file for zookeeper
  template: src=zoo.cfg.j2 dest=/etc/zookeeper/conf.cfg
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
  notify: restart zookeeper

- name: initialize the zookeeper
  shell: creates=/var/lib/zookeeper/myid service zookeeper-server init --myid=${zoo_id}
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
